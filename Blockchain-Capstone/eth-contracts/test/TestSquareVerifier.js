// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require('SquareVerifier');
// - use the contents from proof.json generated from zokrates steps

contract("SquareVerifier", accounts => {
	const zokratesProof = require("../../zokrates/code/square/proof");
    const account_one = accounts[0];
    const proof = zokratesProof.proof;
    const inputs = zokratesProof.inputs;

	describe("Testing the proof", () => {
	    beforeEach(async () => {
	        this.contract = await SquareVerifier.new({from: account_one});
	    });

	    // Test verification with correct proof
	    it("should provide correct verified input", async () => {
	        const verifiedInput = await this.contract.verifyTx.call(proof.a, proof.b, proof.c, inputs);

	        assert.equal(verifiedInput, true);
	    });

	    // Test verification with incorrect proof
	    it("should provide incorrect verified input", async () => {
	        const badInputs = ["0x5555555555", "0x55555555"]
	        const verifiedInput = await this.contract.verifyTx.call(proof.a, proof.b, proof.c, badInputs);
	        assert.equal(verifiedInput, false);
	    });
	});
});